# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    tags:
      - "*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      # max-parallel: 1
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.10]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: get repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m venv myvenv
          source myvenv/bin/activate
          python3 -m pip install pyinstaller
          python3 -m pip install -U tk
        if: matrix.os != 'windows-latest'
      - name: Install dependencies - windows
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install pyinstaller
          python3 -m pip install -U tk
        if: matrix.os == 'windows-latest'

      - name: Make executable - ubuntu
        run: |
          myvenv/bin/pyinstaller -F -w --name pdp8.run __main__.py
          chmod +x dist/pdp8.run
        if: matrix.os == 'ubuntu-latest'

      - name: Make executable - macos
        run: |
          myvenv/bin/pyinstaller -F -w --name pdp8_macos.run __main__.py
          chmod +x dist/pdp8_macos.run
        if: matrix.os == 'macos-latest'

      - name: Make executable - windows
        run: |
          pyinstaller.exe -F -w --name pdp8.exe __main__.py
        if: matrix.os == 'windows-latest'

      - name: Upload release binary - ubuntu
        uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["dist/pdp8.run"]'
        if: matrix.os == 'ubuntu-latest'

      - name: Upload release binary - macos
        uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["dist/pdp8_macos.run"]'
        if: matrix.os == 'macos-latest'

      - name: Upload release binary - windows
        uses: alexellis/upload-assets@0.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["dist/pdp8.exe"]'
        if: matrix.os == 'windows-latest'
